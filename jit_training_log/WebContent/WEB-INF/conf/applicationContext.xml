<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
    http://www.springframework.org/schema/beans/spring-beans.xsd
    http://www.springframework.org/schema/context 
    http://www.springframework.org/schema/context/spring-context.xsd
    http://www.springframework.org/schema/aop 
    http://www.springframework.org/schema/aop/spring-aop.xsd
    http://www.springframework.org/schema/tx 
    http://www.springframework.org/schema/tx/spring-tx.xsd">

	<!-- 配置c3p0连接池 -->
	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
		<property name="driverClass" value="com.mysql.jdbc.Driver"></property>
		<property name="jdbcUrl" value="jdbc:mysql:///myssh"></property>
		<property name="user" value="root"></property>
		<property name="password" value="root"></property>
	</bean>

	<!-- sessionFactory创建 交由spring来完成 -->
	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate5.LocalSessionFactoryBean">

		<property name="dataSource" ref="dataSource"></property>

		<!-- 指定映射的实体类 -->
		<property name="annotatedClasses">
			<list>
				<!-- <value>com.jit.z.liuyanban.entity.User</value> <value>com.jit.z.liuyanban.entity.LiuYan</value> -->
				<value>com.jit.z.log.entity.Log</value>
			</list>
		</property>

		<property name="hibernateProperties">
			<props>
				<!-- 数据库方言 -->
				<prop key="hibernate.dialect">org.hibernate.dialect.MySQLDialect</prop>
				<prop key="show_sql">true</prop>
				<!-- 输出格式化后的sql,更方便查看 -->
				<prop key="hibernate.format_sql">true</prop>
				<!-- sql语句的生成策略 create:创建一个新的表 update：如果有表，更新，如果没有表，创建一个新的 -->
				<prop key="hibernate.hbm2ddl.auto">update</prop>
			</props>
		</property>
	</bean>

	<!-- 配置事务管理器 -->
	<bean id="transactionManager"
		class="org.springframework.orm.hibernate5.HibernateTransactionManager">
		<!-- 注入sessionFactory -->
		<property name="sessionFactory" ref="sessionFactory"></property>
	</bean>

	<!-- 开启事务注解 -->
	<tx:annotation-driven transaction-manager="transactionManager" />


	<!-- 配置action对象 -->
	<bean id="logAction" class="com.jit.z.log.action.LogAction" scope="prototype">
		<!-- 注入service -->
		<property name="logService" ref="logService"></property>
		<!-- 注入log -->
		<property name="log" ref="log"></property>
	</bean>

	<!-- 创建log对象 -->
	<bean id="log" class="com.jit.z.log.entity.Log"></bean>


	<!-- 创建service对象 -->
	<bean id="logService" class="com.jit.z.log.service.impl.LogServiceImpl">
		<!-- 注入dao接口 = 实现类对象 -->
		<property name="logDao" ref="logDao"></property>
	</bean>

	<!-- 创建实现类对象 -->
	<bean id="logDao" class="com.jit.z.log.dao.impl.LogDaoImpl">
		<!-- 注入hibernateTemplate -->
		<property name="hibernateTemplate" ref="hibernateTemplate"></property>
	</bean>


	<!-- 创建hibernateTemplate对象 -->
	<bean id="hibernateTemplate" class="org.springframework.orm.hibernate5.HibernateTemplate">
		<!-- 注入sessionFactory -->
		<property name="sessionFactory" ref="sessionFactory"></property>
	</bean>

</beans>